/****************************************************************************
* Title                 :   queue_private
* Filename              :   queue_private.h
* Author                :   Gabriel Tomio
* Origin Date           :   24/04/2023
* Version               :   1.0.0
* Compiler              :   GCC
* Notes                 :   None
*****************************************************************************/

#ifndef QUEUE_PRIVATE_H_
#define QUEUE_PRIVATE_H_

/******************************************************************************
* Includes
*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/******************************************************************************
* Preprocessor Constants
*******************************************************************************/
#define MINIMUM_SIZE_QUEUE      2

/******************************************************************************
* Configuration Constants
*******************************************************************************/


/******************************************************************************
* Macros
*******************************************************************************/

	
/******************************************************************************
* Typedefs
*******************************************************************************/
typedef struct QUEUE
{
    int num_of_elements;
    int type_size;
    int start_index;
    int current_size;
    int unlimited_size_flag;
    void * p_data;
} queue_priv_t;


/******************************************************************************
* Variables
*******************************************************************************/


/******************************************************************************
* Function Prototypes
*******************************************************************************/
/** @brief : Returns if the queue is full or not */
int queue_is_full(p_queue_t p_queue);

/** @brief : Returns if the queue is empty or not */
int queue_is_empty(p_queue_t p_queue);

#endif
/*** End of File **************************************************************/