/****************************************************************************
* Title                 :   rgen_privado
* Filename              :   rgen_privado.h
* Author                :   Gabriel Tomio
* Origin Date           :   01/04/2023
* Version               :   1.0.0
* Compiler              :   GCC
* Notes                 :   None
*****************************************************************************/
/** @file aplicacao.h
 *  @brief This module TODO: WHAT DO I DO?
 * 
 *  This is the header file for the definition TODO: MORE ABOUT ME!
 */
#ifndef RGEN_PRIVADO_H_
#define RGEN_PRIVADO_H_

/******************************************************************************
* Includes
*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/******************************************************************************
* Preprocessor Constants
*******************************************************************************/
#define MAX_ALOCATED_SIZE 100

/******************************************************************************
* Configuration Constants
*******************************************************************************/


/******************************************************************************
* Macros
*******************************************************************************/

	
/******************************************************************************
* Typedefs
*******************************************************************************/
typedef struct
{
    var_type_t data_type;
    int data_size;
    int data_count;
    void * p_start_address;
    void * p_last_address;
} generic_data_t;


/******************************************************************************
* Variables
*******************************************************************************/
generic_data_t generic_data_info;

/******************************************************************************
* Function Prototypes
*******************************************************************************/
void * store_data(void * p_memory, void * p_data, int data_size);
int get_type_size(var_type_t var_type);

#endif
/*** End of File **************************************************************/